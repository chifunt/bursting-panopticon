/* Base styles: start hidden and non-interactive by default */
.event-popup {
  display: flex;
  position: absolute;
  height: 80%;
  width: 40%;
  background-color: var(--overlay-color);
  box-shadow: 0 0 2vw black, 0 0 4vw black inset;
  border-radius: 3vw;
  flex-direction: column;
  align-items: center;
  padding: 2vw;
  gap: 1vw;
  border: 0.5vw solid var(--overlay-color);
  z-index: 2;

  /* The key properties for fade transitions: */
  opacity: 0;
  pointer-events: none; /* So clicks pass through when hidden. */
  transition: opacity 0.2s ease-in-out; /* 0.5s fade animation */
}

.event-popup.visible {
  display: flex;
  opacity: 1;
  pointer-events: auto; /* Restores clickability */
}

.event-popup img {
  max-width: 40vw;
  border-radius: 2vw;
  box-shadow: 0.1vw 0.2vw 1vw black, 0 0 1vw black inset;
}

.event-popup h2 {
  font-size: 2.5vw;
  text-shadow: 0 0 0.5vw whitesmoke;
}

.event-text-container {
  display: flex;
  flex-direction: column;
  gap: 1vw;
  height: 20vw;
  overflow-y: scroll;
  font-size: 1vw;
  background-color: var(--bg2-color);
  border-radius: 1vw;
  box-shadow: 0 0 1vw black inset, 0 0 1vw black;
  padding: 0.4vw;
  font-family: "Readex Pro";
}

.event-text-container p {
  font-size: 1.1vw
}

.event-buttons-container {
  display: flex;
  gap: 1vw;
}

.event-popup button {
  font-size: 2vw;
  padding: 0.5vw;
}

.event-buttons-container button {
  position: relative;
  padding: 0.5vw 1vw;
  font-size: 2vw;
  cursor: pointer;
  border: 0.2vw solid #ccc;
  border-radius: 0.5vw;
  background-color: var(--button-bg-color);
  color: var(--button-text-color);
  transition: background-color 0.2s ease, color 0.2s ease;
}

/* Optional: Change button style on hover */
.event-buttons-container button:hover {
  background-color: var(--button-hover-bg-color); /* Define this variable */
  color: var(--oil-color); /* Define this variable */
  box-shadow: var(--oil-color) 0 0 1vw;
  border: 0.2vw var(--oil-color) solid;
}

/* 2. Style the ::after pseudo-element to show deductions */
.event-buttons-container button::after {
  content: attr(data-deductions); /* Use the data-deductions attribute */
  position: absolute;
  top: 100%; /* Position below the button */
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.8); /* Tooltip background color */
  color: #fff; /* Tooltip text color */
  padding: 0.5vw;
  border-radius: 0.5vw;
  white-space: nowrap;
  opacity: 0; /* Hidden by default */
  pointer-events: none; /* Prevent mouse events */
  transition: opacity 0.3s ease;
  margin-top: 0.5vw; /* Space between button and tooltip */
  font-size: 1.2vw;
  z-index: 10;
}

/* 3. Show the ::after tooltip on hover */
.event-buttons-container button:hover::after {
  opacity: 1;
}

.event-buttons-container button:disabled {
  color: black; /* Define this variable */
  box-shadow: black 0 0 1vw inset;
  border: 0.2vw black solid;
}
.event-buttons-container button:disabled:hover {
  color: black; /* Define this variable */
  box-shadow: black 0 0 1vw inset;
  border: 0.2vw black solid;
  text-shadow: none;
}
